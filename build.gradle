buildscript {
    repositories {
        maven { url = 'https://maven.neoforged.net/releases/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.neoforged', name: 'NeoGradle', version: '6.0.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}




plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.13, 6.2)'
}


version = mod_version + "-" + minecraft_version
group = mod_group_id

base {
    archivesName = mod_id
}

apply plugin: 'net.neoforged.gradle'
apply plugin: 'org.spongepowered.mixin'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: mapping_channel, version: mapping_version


    copyIdeResources = true
    runs {

        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }


        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {

            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    mavenLocal()

     flatDir {
         dir 'build/jarmods'
     }

}

dependencies {

    minecraft "net.neoforged:forge:${minecraft_version}-${forge_version}"



//    implementation fg.deobf("curse.maven:cyanide-541676:5778405")

    if (file("build/jarmods").isDirectory()) {
        file("build/jarmods").eachFile { file ->
            def splitPos = file.name.lastIndexOf("-")

            if (file.name != "desktop.ini") {
                println file.name

                def modartifact = file.name.substring(0, splitPos)
                def modversion = file.name.substring(splitPos + 1, file.name.length() - 4)
                def modreference = "lib:$modartifact:$modversion"

                dependencies {
                    implementation fg.deobf(project.dependencies.create(modreference) {
                        transitive = false
                    })
                }
            }
        }
    } else file("build/jarmods").mkdir()


    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.5.0"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.5.0")) {
        jarJar.ranged(it, "[0.5.0,)")
    }

    annotationProcessor("org.spongepowered:mixin:0.8.5:processor")

//    implementation fg.deobf("curse.maven:oculus-581495:4767500")
//    implementation fg.deobf("curse.maven:rubidium-574856:4767529")
//    implementation fg.deobf("curse.maven:superb-warfare-1218165:6940728")
//    implementation fg.deobf("curse.maven:geckolib-388172:6920925")
//    implementation fg.deobf("curse.maven:curios-309927:6238756")
//    implementation fg.deobf("curse.maven:entityculling-448233:6780226")

}

minecraft {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
            fdlib_version_range: fdlib_version_range
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}


tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}


publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

mixin {
    add sourceSets.main, "fdbosses.refmap.json"

    config "fdbosses.mixins.json"
}